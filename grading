Project 3
-------------------------------------------------------------------------------

DuckHunt-WorldWar

Contributor Code Docu Asst Adj. Score
----------- ---- ---- ---- ---- -----
Alex        1062   11   25   +2 20/20 A
Ankit       1180        48   +2 20/20 A
Nathan       110   82    8   -3 19/20 A
Robert       253   13        -1 20/20 A

-------------------------------------------------------------------------------

Rubric:
1. Baseline:   15
2. Creativity: +3       great ideas and execution, cv integration, gun
3. Design:     +2       good flow, nice graphics
4. Clean code: +1       good module breakdown, generally nice small functions
5. Document:   +1       detailed description, good retrospective
   Total:      22

-------------------------------------------------------------------------------

Comments:

* You guys did a fantastic job overall. The premise is hilarious, and you
  executed well, even if you didn't manage to implement all the features you
  originally wanted.

* The 3d printed gun was totally over the top. Just wow.

* I'm amazed that you were able to integrate CV for hand/gun detection. It may
  not be working perfectly, but it adds a lot to the authenticity of the game.

* Also, insults.

* Nice architecture diagram.

* Great retrospective. You're learning all the right things.

* Nathan, you're light on code, but you created some nice landscapes, and
  added some good documentation.

* Issues: 19 created. Looks like you made use of issues, but not yet at a very
  granual level, and hardly any commits are tagged.

-------------------------------------------------------------------------------

Generic fine print:
a. "Code" shows the approximate lines of code contributed. This is just a line
   count of "git blame" and shouldn't be taken too seriously. Still, in many
   cases it gives quick sniff test of who did how much work.
b. "Docu" is the same thing applied to the documentation if it is in markdown.
c. "Asst" is an approximate count of the non-code assets contributed, e.g.
   images and sounds.
d. "Adj." is a credit adjustment for contributors who did significantly more or
   less than than average contributor. Credit adjustments sum to 0.
e. "Score" is the final score, taken by adding the lines from the rubric and
   the credit adjustment. Score is capped at 20/20.

1. "Baseline" means all requirements are met. This gives you a C if it's all you
   have.
2. "Creativity" is a measure of how much tought and energy you put into going
   beyond the minimum requirements.
   Points can be deducted here if some requirements are missing.
3. "Design" gives extra points for the look of the UI and overall usability.
   Points can be deducted here if there are errors or crashes.
4. "Clean code" indicates how easy the code is to read. Good code consists of
   short functions with clear names, organized in a coherent way.
   Points can be deducted here if code is redundant or especially messy.
5. "Document" gives extra points if the documentation is especially clear or
   comprehensive.
   Points can be deducted here if the documentation is missing or insufficient.
